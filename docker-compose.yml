networks:
  compulsory-network:
    driver: bridge
services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: compulsory
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
          - compulsory-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      retries: 5
  
  postgres_shard_1:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: compulsory_shard1
    ports:
      - "5435:5432"
    volumes:
      - postgres_shard1_data:/var/lib/postgresql/data
    networks: 
      - compulsory-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      retries: 5
    restart: unless-stopped
  
  postgres_shard_2:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: compulsory_shard2
    ports:
      - "5436:5432"
    volumes:
      - postgres_shard2_data:/var/lib/postgresql/data
    networks: 
      - compulsory-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      retries: 5
    restart: unless-stopped
  
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
        - ./definitions.json:/etc/rabbitmq/definitions.json
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      retries: 5
    networks:
          - compulsory-network
  
  cleaner_service:
    build:
      context: .
      dockerfile: CleanerService/Dockerfile
    #deploy:
      #replicas: 3
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      DB_CONNECTION_STRING: postgres://postgres:root@postgres:5432/compulsory
      DB_DATABASE: compulsory
      DB_USER: postgres
      DB_PASSWORD: root
      DB_PORT: 5432
      DB_HOST: postgres
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
    restart: unless-stopped
    ports:
      - "8087:8080"
    networks: 
      - compulsory-network
    volumes:
      - ./maildir:/app/maildir # Map the maildir folder
      - ./cleaned_mails:/app/cleaned_mails # Map the cleaned_mails folder
  

  indexer_service:
    build:
      context: .
      dockerfile: IndexerService/Dockerfile
    #deploy:
      #replicas: 3
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      DB_CONNECTION_STRING: postgres://postgres:root@postgres:5432/compulsory
      DB_DATABASE: compulsory
      DB_USER: postgres
      DB_PASSWORD: root
      DB_PORT: 5432
      DB_HOST: postgres
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
    restart: unless-stopped
    ports:
      - "8088:8080"
    networks: 
      - compulsory-network

  search_api:
    build:
      context: .
      dockerfile: SearchAPI/Dockerfile
    #deploy:
      #replicas: 3
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_CONNECTION_STRING: postgres://postgres:root@postgres:5432/compulsory
      DB_DATABASE: compulsory
      DB_USER: postgres
      DB_PASSWORD: root
      DB_PORT: 5432
      DB_HOST: postgres
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
    restart: unless-stopped
    ports:
      - "8095:8080"
    #  - "8096:8081"
    #  - "8097:8082"
    networks: 
      - compulsory-network

  seq:
    image: datalust/seq:latest
    container_name: seq
    environment:
      ACCEPT_EULA: "Y"
    ports:
      - "5341:80"
    restart: unless-stopped
    networks: 
      - compulsory-network
    
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    restart: unless-stopped
    networks: 
      - compulsory-network
    
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: unless-stopped
    depends_on:
      - cleaner_service
      - indexer_service
      - search_api
    networks: 
      - compulsory-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - prometheus
    networks: 
      - compulsory-network

  
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      search_api:
        condition: service_started
    networks: 
      - compulsory-network
  
volumes:
  postgres_data:
    driver: local
  postgres_shard1_data:
    driver: local
  postgres_shard2_data:
    driver: local



















