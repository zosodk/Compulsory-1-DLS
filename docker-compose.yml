services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      retries: 5
    logging:
      driver: "local"
      options:
        max-size: "10m"

  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_DB: defaultdb
      POSTGRES_USER: avnadmin
      POSTGRES_PASSWORD: AVNS_wV3mour-_TLqRKYrbRb
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    logging:
      driver: "local"
      options:
        max-size: "10m"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "avnadmin" ]
      interval: 10s
      retries: 5

  cleaner_service:
    build:
      context: .
      dockerfile: CleanerService/Dockerfile
    deploy:
      replicas: 3
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://zipkin:9411/api/v2/spans
      - SERILOG__WRITETO__SEQ__SERVERURL=http://seq:5341
    restart: unless-stopped
    ports:
      - "8081:8080"
    logging:
      driver: "local"
      options:
        max-size: "10m"

  indexer_service:
    build:
      context: .
      dockerfile: IndexerService/Dockerfile
    deploy:
      replicas: 3
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - POSTGRES_HOST=postgres
      - POSTGRES_DATABASE=defaultdb
      - POSTGRES_USER=avnadmin
      - POSTGRES_PASSWORD=AVNS_wV3mour-_TLqRKYrbRb
      - POSTGRES_PORT=5432
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://zipkin:9411/api/v2/spans
      - SERILOG__WRITETO__SEQ__SERVERURL=http://seq:5341
    restart: unless-stopped
    ports:
      - "8082:8080"
    logging:
      driver: "local"
      options:
        max-size: "10m"

  search_api:
    build:
      context: .
      dockerfile: SearchAPI/Dockerfile
    deploy:
      replicas: 3
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DATABASE=defaultdb
      - POSTGRES_USER=avnadmin
      - POSTGRES_PASSWORD=AVNS_wV3mour-_TLqRKYrbRb
      - POSTGRES_PORT=5432
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://zipkin:9411/api/v2/spans
      - SERILOG__WRITETO__SEQ__SERVERURL=http://seq:5341
    restart: unless-stopped
    ports:
      - "8090:8080"
    logging:
      driver: "local"
      options:
        max-size: "10m"

  seq:
    image: datalust/seq:latest
    container_name: seq
    environment:
      ACCEPT_EULA: "Y"
    ports:
      - "5341:80"
    restart: unless-stopped
    logging:
      driver: "local"
      options:
        max-size: "10m"

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    restart: unless-stopped
    logging:
      driver: "local"
      options:
        max-size: "10m"
  
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      search_api:
        condition: service_started
  
  postgres_shard_1:
    image: postgres:latest
    container_name: postgres_shard_1
    environment:
      POSTGRES_DB: shard1db
      POSTGRES_USER: avnadmin
      POSTGRES_PASSWORD: AVNS_wV3mour-_TLqRKYrbRb
    ports:
      - "5435:5432"
    restart: unless-stopped
    volumes:
      - postgres_shard1_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "avnadmin" ]
      interval: 10s
      retries: 5

  postgres_shard_2:
    image: postgres:latest
    container_name: postgres_shard_2
    environment:
      POSTGRES_DB: shard2db
      POSTGRES_USER: avnadmin
      POSTGRES_PASSWORD: AVNS_wV3mour-_TLqRKYrbRb
    ports:
      - "5436:5432"
    restart: unless-stopped
    volumes:
      - postgres_shard2_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "avnadmin" ]
      interval: 10s
      retries: 5


volumes:
  postgres_data:
  postgres_shard1_data:
  postgres_shard2_data:





















#version: "3.8"
#services:
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.1
#    ports:
#      - "9200:9200"
#    environment:
#      - discovery.type=single-node
#      - "ES_JAVA_OPTS=-Xms4096m -Xmx4096m"
#      - xpack.security.enabled=false #disable security
#    volumes:
#      - esdata:/usr/share/elasticsearch/data
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:8.17.1
#    ports:
#      - "5601:5601"
#    environment:
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#      - xpack.security.enabled=false #disable security
#    depends_on:
#      - elasticsearch
#
#  cleaner_indexer:
#    build:
#      context: .
#      dockerfile: Dockerfile.cleaner_indexer
#    depends_on:
#      - elasticsearch
#    volumes:
#      - ./litmus_maildir:/app/litmus_maildir:ro
#      - ./litmus_cleaned_mails:/app/litmus_cleaned_mails
#
#volumes:
#  esdata: